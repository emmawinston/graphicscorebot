Cheap Bots, Done Quick!

Note: currently setting variables (like part 6 here) is bugged. They will only work if not specified within their own node.

Bots are written in Tracery, a generative grammar specified as a JSON string. This site will automatically expand your text, starting from the "origin" node, and then tweet it on a fixed schedule. If it generates a duplicate tweet, or a tweet over 140 characters, it will retry up to 5 times. Line breaks can be entered with the special sequence \n, and hashtags with \\#.

SVG files can now be attached to tweets. The syntax looks like this: {svg <svg ...> ... </svg>}. SVGs will need to specify a width and height attribute. Note that "s within SVG files need to be escaped as \", as does #s (\\#). {s and }s can be escaped as \\{ and \\}. Note: this feature is still in development, so the tweet button on this page will not work. And the debugging info is better in FF than other browsers.

I make no guarantees about the reliability or privacy of this service. If you create a bot I deem abusive or otherwise unpleasant (for example, @mentioning people who have not consented, posting insults or using slurs) I will take it down. Any questions, bug reports or comments, you can reach me at @v21 or at vtwentyone@gmail.com

Tracery tutorial
Tracery visual editor
Example of a self-hosted bot running on Tracery


Tracery JSON

{
	"origin": [
		"#choicesandstrategies#"
	],
	"choicesandstrategies": [
		"#preface##staff##group-path6##ending#"
	],

"preface":"{svg <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"#baseh#\" width=\"#basew#\">",

"ending":"</svg> }",

	"staff": [

"<rect y=\"27\" width=\"400\" height=\"27\" style=\"fill:white;stroke:black;stroke-width:1.2;\" /><rect y=\"54\" width=\"400\" height=\"27\" style=\"fill:white;stroke:black;stroke-width:1.2;\"/><rect y=\"81\" width=\"400\" height=\"27\" style=\"fill:white;stroke:black;stroke-width:1.2;\" /><rect y=\"108\" width=\"400\" height=\"27\" style=\"fill:white;stroke:black;stroke-width:1.2;\"/>",

"<rect y=\"30\" width=\"400\" height=\"108\" style=\"fill:white;stroke:black;stroke-width:1;\"  />"
	],
	"color": [
		"deeppink",
		"cyan",
		"yellow",
		"orange",
		"gray",
		"red",
		"crimson",
		"brown",
		"tomato",
		"orangered",
		"orchid",
		"palevioletred",
		"purple",
		"forestgreen",
		"darkorchid",
		"lawngreen",
		"rosybrown",
		"hotpink",
		"dodgerblue",
		"yellowgreen",
		"maroon",
		"darkorange",
		"blueviolet"
	],
	"linecolor": [
		"cyan",
		"yellow",
		"orange",
		"gray",
		"red",
		"purple",
		"hotpink",
		"dodgerblue",
		"forestgreen",
		"black"
	],
	"opacity": [
		"0",
		"0.1",
		"0.2",
		"0.3",
		"0.4",
		"0.5",
		"0.6",
		"0.7",
		"0.8",
		"0.9",
		"1",
		"1"
	],
	"strokeopacity": [
		"0",
		"0.1",
		"0.2",
		"0.3",
		"0.4",
		"0.5",
		"0.6",
		"0.7",
		"0.8",
		"0.9",
		"1",
		"1",
		"1",
		"1",
		"1",
		"1"
	],

"group-path6":["<path d=\"M #basew# #baseh# L 0 #basew# L 0 2#digit##digit# #curvepoints#  M #basew# #baseh# Z\"  fill=\"none\"  stroke=\"#linecolor#\"></path>",
					"<path d=\"M 0 #baseh# L #basew# #baseh# L #basew# 2#digit##digit# #curvepoints_r#  M 0 #baseh# Z\"   fill=\"none\"  stroke=\"#linecolor#\"></path>"],

	"curvepoints":["#curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint# #curvepoint#"],
	"curvepoints_r":["#curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r# #curvepoint_r#"],

"dist":["2#digit#","2#digit#","4#digit#","3#digit#","5#digit#","6#digit#","7#digit#","8#digit#"],
	"dist_half":["#digit#","#digit#","#0-5#"],
	"h_rel":["-2#digit#", "1#digit#", "-1#digit#","#digit#", "-#digit#","2#digit#"],
	"h_rel_half":["-#digit#", "#0-5#", "-#0-5#","#digit#"],
	"h" : ["2#digit##digit#","2#digit##digit#","3#digit##digit#","1#digit##digit#"],

"digit":["0","1","2","3","4","5","6","7","8","9"],
	"0-2":["0","1","2"],
	"1-3":["3","1","2"],
	"0-5":["0","1","2","3","4","5"],
	"4-9":["4","5","6","7","8","9"],
	"hexdigit":["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"],
	"highhex":["a","b","c","d","e","f"],

	"curvepoint":"q #dist_half# #h_rel_half# #dist# #h_rel#",
	"curvepoint_r":"q -#dist_half# #h_rel_half# -#dist# #h_rel#",


	"curvepoint_cloud":"t #tx# #ty_cloud#",
	"curvepoint_cloud_r":"t -#tx# #ty_cloud#",
"basew":"1000",
	"basew+200":"600",
	"baseh":"400" 
}

  TWEET
  post a tweet as   scorebottest  
 Tracery source at cheapbotsdonequick.com/source/scorebottest.  